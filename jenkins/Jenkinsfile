pipeline {
    agent {
        label "master"
    }
    tools {
        maven "Maven"
    }
    environment {
        NEXUS_VERSION = "nexus3"
        NEXUS_PROTOCOL = "http"
        NEXUS_URL = "34.93.191.143:8081"
        NEXUS_REPOSITORY = "OPTIMUM"
        NEXUS_CREDENTIAL_ID = "jenkins-user-id"
    }
    stages {
        stage("Clone code from Github") {
            steps {
                script {
                    git  'https://github.com/javaee/cargotracker.git';
                }
            }
        }
        stage("Maven Build") {
            steps {
                script {
                    sh "mvn package -DskipTests=true"
                }
            }
        }
       stage("Publish to Nexus Repository Manager") {
            steps {
                script {
                    pom = readMavenPom file: "pom.xml";
                    filesByGlob = findFiles(glob: "target/*.${pom.packaging}");
                    echo "${filesByGlob[0].name} ${filesByGlob[0].path} ${filesByGlob[0].directory} ${filesByGlob[0].length} ${filesByGlob[0].lastModified}"
                    artifactPath = filesByGlob[0].path;
                    artifactExists = fileExists artifactPath;
                    if(artifactExists) {
                        echo "*** File: ${artifactPath}, group: ${pom.groupId}, packaging: ${pom.packaging}, version ${pom.version}";
                        nexusArtifactUploader(
                            nexusVersion: NEXUS_VERSION,
                            protocol: NEXUS_PROTOCOL,
                            nexusUrl: NEXUS_URL,
                            groupId: pom.groupId,
                            version: pom.version,
                            repository: NEXUS_REPOSITORY,
                            credentialsId: NEXUS_CREDENTIAL_ID,
                            artifacts: [
                                [artifactId: pom.artifactId,
                                classifier: '',
                                file: artifactPath,
                                type: pom.packaging],
                                [artifactId: pom.artifactId,
                                classifier: '',
                                file: "pom.xml",
                                type: "pom"]
                            ]
                        );
                    } else {
                        error "*** File: ${artifactPath}, could not be found";
                    }
                }
            }
        }
         stage('Generate Artifact') {
            steps {
                script {

                    //   curl -s "http://10.148.0.6:8081/nexus/service/local/artifact/maven/resolve?g=com.web.netj&a=demoj&v=${params.projVersion}&r=demo" | xmllint --xpath "///sha1/text()"
                   // def checkScumTxt =httpRequest "http://10.148.0.6:8081/service/rest/v1/search/assets/download?repository=demo&sort=version&maven.groupId=com.web.net&maven.artifactId=demo&maven.baseVersion=${params.projVersion}&maven.extension=jar.sha1&maven.classifier="
                   
                    def checkScumTxt = httpRequest "http://34.93.191.143:8081/repository/OPTIMUM/net/java/cargo-tracker/1.0-SNAPSHOT/cargo-tracker-1.0-20210628.075353-4.pom.md5"
                    sh "echo '{\"groupId\":\"${pom.groupId}\"' > artifact.txt"
                    sh "echo ',\"checksum\":\"${checkScumTxt.content}\"' >> artifact.txt"
                    sh "echo ',\"artifactId\":\"${pom.artifactId}\"' >> artifact.txt"
                    sh "echo ',\"Database\":\"${NEXUS_REPOSITORY}\"' >> artifact.txt"
                    sh "echo ',\"version\":\"${pom.version}\" }' >> artifact.txt"
                   }
            }
        }
    }
    post {
        always {
                archiveArtifacts artifacts: 'artifact.txt', onlyIfSuccessful: true
        }
    } 
   
}